@page "/actors/create"
@using Core.Entities
@inject Application.ServicesInterfaces.IActorService ActorService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="container mt-5" id="create-actor-form">
    <div class="row justify-content-center mb-5">
        <div class="col-md-8 col-lg-6">
            <div class="bg-white p-5 rounded shadow-sm">
                <div class="card-header text-center" style="background-color: transparent">
                    <h1 style="color: #800020;">Adding Actor</h1>
                </div>
                <EditForm Model="_actor" OnValidSubmit="HandleValidSubmit" FormName="AddingActor">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group mb-3">
                        <label class="form-label" style="color: #800020">Name</label>
                        <InputText @bind-Value="_actor.Name" 
                                 class="form-control" 
                                 style="border: none; border-bottom: 2px solid #800020;color: black" 
                                 placeholder="Enter actor's name" />
                        <ValidationMessage For="@(() => _actor.Name)" />
                    </div>

                    <div class="form-group mb-3">
                        <label class="form-label" style="color: #800020">Date of Birth</label>
                        <InputDate @bind-Value="_actor.DateOfBirth" 
                                 class="form-control" 
                                 style="background-color: transparent;border: none;border-bottom: 2px solid #800020; color:black;" />
                        <ValidationMessage For="@(() => _actor.DateOfBirth)" />
                    </div>

                    <div class="form-group mb-4">
                        <label class="form-label" style="color: #800020">Description</label>
                        <InputTextArea @bind-Value="_actor.Biography" 
                                     class="form-control" 
                                     rows="5" 
                                     style="border: none; border-bottom: 2px solid #800020;color: black" 
                                     placeholder="Enter actor's biography" />
                        <ValidationMessage For="@(() => _actor.Biography)" />
                    </div>

                    <div class="d-grid gap-2 mb-3">
                        <button type="submit" 
                                class="btn mt-3 mb-4" 
                                style="background-color: #800020; border-radius: 30px;color: white">
                            Create
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private Actor _actor;

    protected override void OnInitialized()
    {
        _actor = new Actor
        {
            Name = null,            // Initialize as null instead of empty string
            Biography = null,       // Initialize as null instead of empty string
            DateOfBirth = DateTime.Today
        };
    }
    
    private async Task HandleValidSubmit()
    {
        // Add some debug output
        Console.WriteLine($"Submitting - Name: '{_actor.Name}', Bio: '{_actor.Biography}'");
        
        await Task.Run(()=>ActorService.AddActor(_actor));
        Navigation.NavigateTo("/actors");
    }
}